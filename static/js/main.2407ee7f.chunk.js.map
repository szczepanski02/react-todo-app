{"version":3,"sources":["components/Item/Item.js","components/ItemList/ItemList.js","components/AddItem/AddItem.js","components/App.js","reportWebVitals.js","index.js"],"names":["Item","props","priorityClass","content","date","priority","id","deleteItem","updateItemStatus","finishDate","isFinished","finish","Date","toLocaleString","className","onClick","ItemList","active","items","filter","item","reverse","done","activeList","map","doneList","Fragment","length","AddItem","minDate","toLocaleDateString","state","isVerified","errorList","handleSubmitClick","errors","push","setState","addItem","priorityColor","handleClick","handleTextareaChange","e","target","value","handleDateChange","this","maxDate","slice","error","name","placeholder","onChange","cols","rows","type","min","max","style","React","Component","App","counter","itemsList","index","findIndex","splice","forEach","getTime","prevState","fetch","then","res","json","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2407ee7f.chunk.js","sourcesContent":["import './Item.css';\n\nconst Item = (props) => {\n\n    const { content, date, priority, id, deleteItem, updateItemStatus, finishDate, isFinished } = props;\n    let priorityClass;\n\n    if(props.priority === \"normal\") {\n        priorityClass = \"normal\";\n    } else if(props.priority === \"low\") {\n        priorityClass = \"low\";\n    } else if(props.priority === \"high\") {\n        priorityClass = \"high\";\n    }\n\n    if(isFinished) {\n        const finish = new Date(finishDate).toLocaleString();\n        return (\n            <li>\n            <div className=\"item_header\">\n                <p>Has been finished: {finish}</p>\n            </div>\n            <div className=\"item_content\">\n                <p>{content}</p>\n            </div>\n            <button className=\"remove\" onClick={() => deleteItem(id)}>Remove</button>\n        </li>\n        )\n\n    } else {\n        return (\n            <li>\n                <div className=\"item_header\">\n                    <p>{date}</p>\n                    <span>Priority:<strong className={priorityClass}>{priority}</strong></span>\n                </div>\n                <div className=\"item_content\">\n                    <p>{content}</p>\n                </div>\n                <button className=\"remove\" onClick={() => deleteItem(id)}>Remove</button>\n                <button className=\"done\" onClick={() => updateItemStatus(id)}>Done</button>\n            </li>\n        )\n    }\n\n}\n\nexport default Item;","import React from 'react';\nimport Item from '../Item/Item';\n\nconst ItemList = (props) => {\n\n    const { deleteItem, updateItemStatus } = props;\n\n    const active = props.items.filter(item => item.isFinished === false).reverse();\n    const done = props.items.filter(item => item.isFinished);\n\n    const activeList = active.map(item => {\n        return (\n            <Item key={item.id} id={item.id} date={item.date} priority={item.priority} content={item.content} deleteItem={deleteItem} updateItemStatus={updateItemStatus} finishDate={item.finishDate} isFinished={item.isFinished}/>\n        )\n    });\n    \n    const doneList = done.map(item => {\n        return (\n            <Item key={item.id} id={item.id} date={item.date} priority={item.priority} content={item.content} deleteItem={deleteItem}  updateItemStatus={updateItemStatus} finishDate={item.finishDate} isFinished={item.isFinished}/>\n        )\n    });\n\n    return (\n        <React.Fragment>\n            <div className=\"activeList\">\n                <h2>To do task list</h2>\n                {activeList.length > 0 ? activeList : 'You dont have any tasks'}\n            </div>\n\n            <div className=\"doneList\">\n                <hr/>\n                <h2>Last 5 done tasks:</h2>\n                {doneList.length > 0 ? doneList : 'You dont have any done tasks'}\n            </div>\n        </React.Fragment>\n    )\n\n}\n\nexport default ItemList;","import React from 'react';\nimport './AddItem.css';\nimport '../../'\n\nclass AddItem extends React.Component {\n\n    minDate = new Date().toLocaleDateString('en-CA');\n\n    state = {\n        priority: '',\n        content: '',\n        date: this.minDate,\n        isVerified: false,\n        errorList: []\n    }\n\n    handleSubmitClick = () => {\n        const { date, content, priority } = this.state;\n        let errors = [];\n\n        if(priority === '' && content < 10) {\n            errors.push('The content of task cant be empty!');\n            errors.push('You must choose a priority of task!');\n            this.setState({\n                errorList: [...errors]\n            })\n        }\n        else if(priority === '') {\n            errors.push('You must choose a priority of task!');\n            this.setState({\n                errorList: [...errors]\n            })\n        }\n        else if(content < 10) {\n            errors.push('The content of task cant be empty!');\n            this.setState({\n                errorList: [...errors]\n            })\n        } else {\n            const add = this.props.addItem(content, date, priority);\n            if(add) {\n                this.setState({\n                    priority: '',\n                    content: '',\n                    date: this.minDate,\n                    isVerified: false,\n                    errorList: []\n                });\n            }\n            this.priorityColor = \"black\";\n        }\n    }\n\n    handleClick = (priority) => {\n        this.setState({\n            priority\n        });\n        if(priority === 'low') {\n            this.priorityColor = 'green';\n        }\n        if(priority === 'medium') {\n            this.priorityColor = 'blue';\n        }\n        if(priority === 'high') {\n            this.priorityColor = 'red';\n        }\n    }\n    \n    handleTextareaChange = (e) => {\n        this.setState({\n            content: e.target.value\n        });\n    }\n\n    handleDateChange = (e) => {\n        this.setState({\n            date: e.target.value\n        })\n    }\n\n    render() {\n        const { content, date, priority, errorList } = this.state;\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\n        maxDate = maxDate + \"-\" + this.minDate.slice(5);\n        const errors = errorList.map(error => {\n            return (\n                <p className=\"error\" key={error}>{error}</p>\n            )\n        });\n\n        return (\n            <div className=\"additem\">\n                <div className=\"header\">\n                    <h2>Add new task</h2>\n                </div>\n                    <textarea name=\"content\" placeholder=\"Type your task content\" value={content} onChange={this.handleTextareaChange} cols=\"30\" rows=\"10\"></textarea>\n                    <input type=\"date\" value={date} min={this.minDate} max={maxDate} onChange={this.handleDateChange}/>\n\n                    <p>Choose task priority</p>\n                    <button className=\"lowBtn\" onClick={() => this.handleClick('low')}>Low</button>\n                    <button className=\"mediumBtn\" onClick={() => this.handleClick('medium')}>Medium</button>\n                    <button className=\"highBtn\" onClick={() => this.handleClick('high')}>High</button>\n\n                    <p className=\"selected\">Priority selected: <strong style={{'color': this.priorityColor}}>{priority !== '' ? priority : 'none'}</strong></p>\n\n                    <button className=\"submit\" onClick={this.handleSubmitClick}>ADD TASK</button>\n\n                    {errors}\n                    <br />\n                <hr />\n            </div>\n            \n\n        )\n    }\n}\nexport default AddItem;","import React from 'react';\nimport './App.css';\nimport ItemList from './ItemList/ItemList';\nimport AddItem from './AddItem/AddItem';\n\nclass App extends React.Component {\n\n  counter = 2;\n\n  state = {\n    items: []\n  }\n\n  componentDidMount() {\n    fetch('data.json')\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        items: data.items\n      });\n    })\n    .catch((error) => console.log(error));\n  }\n\n  deleteItem = (id) => {\n    const itemsList = [...this.state.items];\n    const index = itemsList.findIndex(item => item.id === id);\n    itemsList.splice(index, 1);\n    this.setState({\n      items: [...itemsList]\n    })\n    this.counter--;\n  }\n\n  updateItemStatus = (id) => {\n    const itemsList = [...this.state.items];\n    itemsList.forEach(item => {\n      if(item.id === id) {\n        item.isFinished = true;\n        item.finishDate = new Date().getTime();\n      }\n      this.setState({\n        items: [...itemsList]\n      });\n    });\n  }\n\n  addItem = (content, date, priority) => {\n    const item = {\n      id: this.counter,\n      content,\n      date,\n      priority,\n      isFinished: false,\n      finishDate: null\n    }\n    this.setState(prevState => ({\n      items: [...prevState.items, item]\n    }));\n    this.counter++\n    return true;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <AddItem addItem={this.addItem}/>\n          <ItemList items={this.state.items} deleteItem={this.deleteItem} updateItemStatus={this.updateItemStatus}/>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/main.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}